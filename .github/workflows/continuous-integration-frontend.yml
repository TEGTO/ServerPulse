name: Continuous Integration Frontend

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop-release
    paths:
      - "src/ServerPulse.Frontend/**"
  pull_request:
    branches:
      - main
      - develop-release
    paths:
      - "src/ServerPulse.Frontend/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: write-all

env:
  NODE_VERSION: "20.x"

jobs:
  run-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install --force
        working-directory: src/ServerPulse.Frontend

      - name: Run tests with coverage
        run: npm run test:ci -- --code-coverage
        working-directory: src/ServerPulse.Frontend

      - name: Upload code coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: src/ServerPulse.Frontend/coverage

      - name: Build Angular Project
        run: npm run build -- --configuration production
        working-directory: src/ServerPulse.Frontend

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: src/ServerPulse.Frontend/dist

      - name: Trigger SonarCloud Workflow
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/continuous-integration-sonarcloud.yml/dispatches \
            -d '{"ref": "${{ github.ref_name }}"}'

  docker:
    needs: run-ci
    # if: ${{ github.ref == 'refs/heads/develop-release' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Frontend
        uses: docker/build-push-action@v6
        with:
          context: src/ServerPulse.Frontend
          push: true
          tags: tegto/serverpulse.frontend:dev
          build-args: |
            ENV=k8

  # docs:
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   concurrency:
  #     group: "ci-frontend-docs"
  #     cancel-in-progress: false
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #         lfs: false

  #     - name: Cache Node.js dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-npm-

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}

  #     - name: Install dependencies
  #       run: npm install @compodoc/compodoc@1.1.26
  #       working-directory: src/ServerPulse.Frontend

  #     - name: Generate Documentation with Compodoc
  #       run: npm run compodoc:build
  #       working-directory: src/ServerPulse.Frontend

  #     - name: Upload Documentation Artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: frontend-docs
  #         path: docs/frontend

  #     - name: Deploy Frontend Documentation to External Repository
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         personal_token: ${{ secrets.PERSONAL_DOCS_TOKEN }}
  #         publish_dir: docs/frontend
  #         external_repository: TEGTO/ServerPulse.Docs.Frontend
  #         branch: gh-pages
