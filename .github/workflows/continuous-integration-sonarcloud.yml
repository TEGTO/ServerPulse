name: Upload Coverage To SonarCloud

on:
  workflow_dispatch:

env:
  DOTNET_VERSION: "8.0.x"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  download-and-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Latest Workflow Run ID for Backend on Current Branch
        id: backend_run_id
        run: |
          backend_workflow_id=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows?per_page=100" | \
            jq -r '.workflows[] | select(.name == "Continuous Integration Backend") | .id')

          echo "Backend Workflow ID: $backend_workflow_id"
          echo "backend_workflow_id=$backend_workflow_id" >> $GITHUB_ENV

          run_id=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$backend_workflow_id/runs?branch=${{ github.ref_name }}&status=success&per_page=1" | \
            jq '.workflow_runs[0].id')

          echo "Backend Run ID: $run_id"
          echo "backend_run_id=$run_id" >> $GITHUB_ENV

      - name: Download Backend Coverage
        id: backend_download
        uses: actions/download-artifact@v4
        with:
          name: code-coverage
          path: ./coverage/backend
          run-id: ${{ env.backend_run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
      - name: Set Backend Download Status
        run: |
          if [ -d "./coverage/backend" ]; then
            echo "backend_download_success=true" >> $GITHUB_ENV
          else
            echo "backend_download_success=false" >> $GITHUB_ENV
          fi

      - name: Fallback to Main Branch for Backend Coverage
        if: env.backend_download_success == 'false'
        run: |
          echo "Falling back to main branch for Backend Coverage"

          backend_main_run_id=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ env.backend_workflow_id }}/runs?branch=main&status=success&per_page=1" | \
            jq '.workflow_runs[0].id')

          echo "Fallback Backend Run ID: $backend_main_run_id"

          artifact_url=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/$backend_main_run_id/artifacts" | \
            jq -r '.artifacts[] | select(.name == "code-coverage") | .archive_download_url')

          mkdir -p ./coverage/backend

          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o ./coverage/backend/coverage.zip "$artifact_url"

          unzip ./coverage/backend/coverage.zip -d ./coverage/backend

      - name: Get Latest Workflow Run ID for Frontend on Current Branch
        id: frontend_run_id
        run: |
          frontend_workflow_id=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows?per_page=100" | \
            jq -r '.workflows[] | select(.name == "Continuous Integration Frontend") | .id')

          echo "Frontend Workflow ID: $frontend_workflow_id"
          echo "frontend_workflow_id=$frontend_workflow_id" >> $GITHUB_ENV

          run_id=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$frontend_workflow_id/runs?branch=${{ github.ref_name }}&status=success&per_page=1" | \
            jq '.workflow_runs[0].id')

          echo "Frontend Run ID: $run_id"
          echo "frontend_run_id=$run_id" >> $GITHUB_ENV

      - name: Download Frontend Coverage
        id: frontend_download
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: ./coverage/frontend
          run-id: ${{ env.frontend_run_id }}
          github-token: ${{ github.token }}
        continue-on-error: true
      - name: Set Frontend Download Status
        run: |
          if [ -d "./coverage/frontend" ]; then
            echo "frontend_download_success=true" >> $GITHUB_ENV
          else
            echo "frontend_download_success=false" >> $GITHUB_ENV
          fi

      - name: Fallback to Main Branch for Frontend Coverage
        if: env.frontend_download_success == 'false'
        run: |
          echo "Falling back to main branch for Frontend Coverage"
          frontend_main_run_id=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ env.frontend_workflow_id }}/runs?branch=main&status=success&per_page=1" | \
            jq '.workflow_runs[0].id')

          echo "Fallback Frontend Run ID: $frontend_main_run_id"

          artifact_url=$(curl -s \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/$frontend_main_run_id/artifacts" | \
            jq -r '.artifacts[] | select(.name == "coverage-report") | .archive_download_url')

          mkdir -p ./coverage/frontend

          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o ./coverage/frontend/coverage.zip "$artifact_url"

          unzip ./coverage/frontend/coverage.zip -d ./coverage/frontend

      - name: Merge Coverage Reports
        run: |
          mkdir merged-coverage
          cp ./coverage/backend/coverage.xml merged-coverage/coverage-backend.xml
          cp ./coverage/frontend/lcov.info merged-coverage/coverage-frontend.lcov
          rm -r ./coverage

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Add SonarCloud
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin \
            /k:"${{ secrets.SONAR_PROJECT_KEY }}" \
            /o:"${{ secrets.SONAR_ORGANIZATION }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.vscoveragexml.reportsPaths="merged-coverage/coverage-backend.xml" \
            /d:sonar.javascript.lcov.reportPaths="merged-coverage/coverage-frontend.lcov" \
            /d:sonar.branch.name="${{ github.ref_name }}" 
          dotnet build --configuration Release src/ServerPulse.Backend/ServerPulse.Backend.sln
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
